{
  "version": 3,
  "sources": ["../../src/generated/hello_world.ts"],
  "sourcesContent": ["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.2.1\n//   protoc               v5.28.2\n// source: hello_world.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\n\nexport const protobufPackage = \"helloWorldPackage\";\n\nexport interface HelloWorldRequest {\n  message: string;\n}\n\nexport interface HelloWorldResponse {\n  message: string;\n}\n\nfunction createBaseHelloWorldRequest(): HelloWorldRequest {\n  return { message: \"\" };\n}\n\nexport const HelloWorldRequest: MessageFns<HelloWorldRequest> = {\n  encode(message: HelloWorldRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): HelloWorldRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHelloWorldRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): HelloWorldRequest {\n    return { message: isSet(object.message) ? globalThis.String(object.message) : \"\" };\n  },\n\n  toJSON(message: HelloWorldRequest): unknown {\n    const obj: any = {};\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<HelloWorldRequest>, I>>(base?: I): HelloWorldRequest {\n    return HelloWorldRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<HelloWorldRequest>, I>>(object: I): HelloWorldRequest {\n    const message = createBaseHelloWorldRequest();\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseHelloWorldResponse(): HelloWorldResponse {\n  return { message: \"\" };\n}\n\nexport const HelloWorldResponse: MessageFns<HelloWorldResponse> = {\n  encode(message: HelloWorldResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.message !== \"\") {\n      writer.uint32(10).string(message.message);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): HelloWorldResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHelloWorldResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.message = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): HelloWorldResponse {\n    return { message: isSet(object.message) ? globalThis.String(object.message) : \"\" };\n  },\n\n  toJSON(message: HelloWorldResponse): unknown {\n    const obj: any = {};\n    if (message.message !== \"\") {\n      obj.message = message.message;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<HelloWorldResponse>, I>>(base?: I): HelloWorldResponse {\n    return HelloWorldResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<HelloWorldResponse>, I>>(object: I): HelloWorldResponse {\n    const message = createBaseHelloWorldResponse();\n    message.message = object.message ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\nexport interface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],
  "mappings": "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",
  "names": []
}
