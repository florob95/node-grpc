{
  "version": 3,
  "sources": ["../src/server.ts"],
  "sourcesContent": ["import * as grpc from '@grpc/grpc-js'\nimport * as protoLoader from '@grpc/proto-loader'\nimport * as fs from 'node:fs'\nimport path from 'path'\nimport { helloWorld, HelloWorldPackage } from './services/hello_world.js'\n\nconst PROTO_DIR = './src/protos'\nconst PROTO_PATHS = fs\n  .readdirSync(PROTO_DIR)\n  .filter((file) => file.endsWith('.proto'))\n  .map((file) => path.join(PROTO_DIR, file))\n\nconst packageDefinition = protoLoader.loadSync(PROTO_PATHS, {\n  keepCase: true,\n  longs: String,\n  enums: String,\n  defaults: true,\n  oneofs: true,\n})\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst protoDescriptor = grpc.loadPackageDefinition(packageDefinition) as any\n\nconst helloWorldPackage = protoDescriptor.helloWorldPackage as HelloWorldPackage\n\nconst server = new grpc.Server()\nserver.bindAsync(\n  '0.0.0.0:50051',\n  grpc.ServerCredentials.createInsecure(),\n  (error, port) => {\n    server.addService(helloWorldPackage.HelloWorldService.service, {\n      HelloWorld: helloWorld,\n    })\n    if (error) {\n      console.error('Error starting server:', error)\n      return\n    }\n    console.log(`Server started on port ${port}`)\n  },\n)\n"],
  "mappings": "AAAA,YAAY,UAAU;AACtB,YAAY,iBAAiB;AAC7B,YAAY,QAAQ;AACpB,OAAO,UAAU;AACjB,SAAS,kBAAqC;AAE9C,MAAM,YAAY;AAClB,MAAM,cAAc,GACjB,YAAY,SAAS,EACrB,OAAO,CAAC,SAAS,KAAK,SAAS,QAAQ,CAAC,EACxC,IAAI,CAAC,SAAS,KAAK,KAAK,WAAW,IAAI,CAAC;AAE3C,MAAM,oBAAoB,YAAY,SAAS,aAAa;AAAA,EAC1D,UAAU;AAAA,EACV,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AACV,CAAC;AAED,MAAM,kBAAkB,KAAK,sBAAsB,iBAAiB;AAEpE,MAAM,oBAAoB,gBAAgB;AAE1C,MAAM,SAAS,IAAI,KAAK,OAAO;AAC/B,OAAO;AAAA,EACL;AAAA,EACA,KAAK,kBAAkB,eAAe;AAAA,EACtC,CAAC,OAAO,SAAS;AACf,WAAO,WAAW,kBAAkB,kBAAkB,SAAS;AAAA,MAC7D,YAAY;AAAA,IACd,CAAC;AACD,QAAI,OAAO;AACT,cAAQ,MAAM,0BAA0B,KAAK;AAC7C;AAAA,IACF;AACA,YAAQ,IAAI,0BAA0B,IAAI,EAAE;AAAA,EAC9C;AACF;",
  "names": []
}
